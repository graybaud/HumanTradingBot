Query order (USER_DATA)
GET /api/v3/order 

Check an order's status.

Weight: 4

Parameters:

Name	Type	Mandatory	Description
symbol	STRING	YES	
orderId	LONG	NO	
origClientOrderId	STRING	NO	
recvWindow	LONG	NO	The value cannot be greater than 60000
timestamp	LONG	YES	
Notes:

Either orderId or origClientOrderId must be sent.
For some historical orders cummulativeQuoteQty will be < 0, meaning the data is not available at this time.
Data Source: Memory => Database

Response:

{
  "symbol": "LTCBTC",
  "orderId": 1,
  "orderListId": -1                 // This field will always have a value of -1 if not an order list.
  "clientOrderId": "myOrder1",
  "price": "0.1",
  "origQty": "1.0",
  "executedQty": "0.0",
  "cummulativeQuoteQty": "0.0",
  "status": "NEW",
  "timeInForce": "GTC",
  "type": "LIMIT",
  "side": "BUY",
  "stopPrice": "0.0",
  "icebergQty": "0.0",
  "time": 1499827319559,
  "updateTime": 1499827319559,
  "isWorking": true,
  "workingTime":1499827319559,
  "origQuoteOrderQty": "0.000000",
  "selfTradePreventionMode": "NONE"
}

Note: The payload above does not show all fields that can appear. Please refer to Conditional fields in Order Responses.



Cancel order (TRADE)
DELETE /api/v3/order 

Cancel an active order.

Weight: 1

Parameters:

Name	Type	Mandatory	Description
symbol	STRING	YES	
orderId	LONG	NO	
origClientOrderId	STRING	NO	
newClientOrderId	STRING	NO	Used to uniquely identify this cancel. Automatically generated by default.
cancelRestrictions	ENUM	NO	Supported values:
ONLY_NEW - Cancel will succeed if the order status is NEW.
ONLY_PARTIALLY_FILLED - Cancel will succeed if order status is PARTIALLY_FILLED.
recvWindow	LONG	NO	The value cannot be greater than 60000.
timestamp	LONG	YES	
Either orderId or origClientOrderId must be sent. If both parameters are sent, orderId takes precedence.

Data Source: Matching Engine

Response:

{
  "symbol": "LTCBTC",
  "origClientOrderId": "myOrder1",
  "orderId": 4,
  "orderListId": -1, // Unless part of an order list, the value will always be -1.
  "clientOrderId": "cancelMyOrder1",
  "transactTime": 1684804350068,
  "price": "2.00000000",
  "origQty": "1.00000000",
  "executedQty": "0.00000000",
  "cummulativeQuoteQty": "0.00000000",
  "status": "CANCELED",
  "timeInForce": "GTC",
  "type": "LIMIT",
  "side": "BUY",
  "selfTradePreventionMode": "NONE"
}

Note: The payload above does not show all fields that can appear in the order response. Please refer to Conditional fields in Order Responses.

Regarding cancelRestrictions
If the cancelRestrictions value is not any of the supported values, the error will be:
{
    "code": -1145,
    "msg": "Invalid cancelRestrictions"
}

If the order did not pass the conditions for cancelRestrictions, the error will be:
{
    "code": -2011,
    "msg": "Order was not canceled due to cancel restrictions."
}

Test new order (TRADE)
POST /api/v3/order/test

Test new order creation and signature/recvWindow long. Creates and validates a new order but does not send it into the matching engine.

Weight:

Condition	Request Weight
Without computeCommissionRates	1
With computeCommissionRates	20
Parameters:

In addition to all parameters accepted by POST /api/v3/order, the following optional parameters are also accepted:

Name	Type	Mandatory	Description
computeCommissionRates	BOOLEAN	NO	Default: false
Data Source: Memory

Response:

Without computeCommissionRates

{}

With computeCommissionRates

{
  "standardCommissionForOrder": {  //Standard commission rates on trades from the order.
    "maker": "0.00000112",
    "taker": "0.00000114",
  },
  "taxCommissionForOrder": {       //Tax commission rates for trades from the order.
    "maker": "0.00000112",
    "taker": "0.00000114",
  },
  "discount": {                    //Discount on standard commissions when paying in BNB.
    "enabledForAccount": true,
    "enabledForSymbol": true,
    "discountAsset": "BNB",
    "discount": "0.25000000"       //Standard commission is reduced by this rate when paying commission in BNB.
  }
}


    def order_GET(self, symbol, orderId=None, origClientOrderId=None, recvWindow=None):
        """
        Check the status of an order.

        Weight:
            - 4 for each request.

        Input:
            - symbol (string): Required. The trading pair (e.g., "BTCUSDT").
            - orderId (long): Optional. The unique order ID.
            - origClientOrderId (string): Optional. The original client order ID.
            - recvWindow (long): Optional. The value cannot exceed 60000.
            - timestamp (long): Required and handled by the client.

        Output:
            - Returns the order details including its status, quantities, and times.

        Notes:
            - Either `orderId` or `origClientOrderId` must be sent.
            - For some historical orders, `cummulativeQuoteQty` might be less than 0, meaning the data isn't available.
        
        Response example:
            {
            "symbol": "LTCBTC",
            "orderId": 1,
            "orderListId": -1,
            "clientOrderId": "myOrder1",
            "price": "0.1",
            "origQty": "1.0",
            "executedQty": "0.0",
            "cummulativeQuoteQty": "0.0",
            "status": "NEW",
            "timeInForce": "GTC",
            "type": "LIMIT",
            "side": "BUY",
            "stopPrice": "0.0",
            "icebergQty": "0.0",
            "time": 1499827319559,
            "updateTime": 1499827319559,
            "isWorking": true,
            "workingTime": 1499827319559,
            "origQuoteOrderQty": "0.000000",
            "selfTradePreventionMode": "NONE"
            }
        """